<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - TimeKey System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container-custom {
            max-width: 500px;
            margin: 0 auto;
            padding: 2rem;
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            backdrop-filter: blur(10px);
            background: rgba(255,255,255,0.95);
        }
        .card-header {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-radius: 15px 15px 0 0 !important;
            text-align: center;
            padding: 1.5rem;
        }
        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border: none;
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
        }
        .btn-primary:hover {
            background: linear-gradient(45deg, #5a6fd8, #6a4190);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        .form-control {
            border-radius: 25px;
            padding: 12px 20px;
            border: 2px solid #e0e0e0;
        }
        .navbar {
            background: rgba(255,255,255,0.1) !important;
            backdrop-filter: blur(10px);
        }
        .navbar-brand, .nav-link {
            color: white !important;
        }
        .token-display {
            font-family: 'Courier New', monospace;
            font-size: 2rem;
            font-weight: bold;
            letter-spacing: 3px;
            text-align: center;
            padding: 20px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-radius: 15px;
            margin: 20px 0;
            position: relative;
        }
        .timer {
            position: absolute;
            top: 5px;
            right: 15px;
            font-size: 0.8rem;
            opacity: 0.8;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-key"></i> TimeKey System
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/dashboard">Dashboard</a>
                <form method="POST" action="/logout" class="d-inline">
                    <button type="submit" class="btn btn-link nav-link border-0">Logout</button>
                </form>
                <a class="nav-link" href="/verify">Verify Key</a>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="container-custom">
            <div class="card">
                <div class="card-header">
                    <h2><i class="fas fa-tachometer-alt"></i> Dashboard</h2>
                    <p class="mb-0">Welcome, <strong><%= user.username %></strong></p>
                </div>
                <div class="card-body p-5">
                    <div class="text-center">
                        <h5 class="mb-3">Your Current Time-Based Key:</h5>
                        
                        <div class="token-display" id="tokenDisplay">
                            <div class="timer" id="timer"><%= timeRemaining %>s</div>
                            <%= token %>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <button class="btn btn-outline-primary w-100" onclick="copyToken()">
                                    <i class="fas fa-copy"></i> Copy Key
                                </button>
                            </div>
                            <div class="col-md-6">
                                <button class="btn btn-outline-secondary w-100" onclick="refreshToken()">
                                    <i class="fas fa-sync-alt"></i> Refresh
                                </button>
                            </div>
                        </div>
                        
                        <div class="mt-4">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i> 
                                This key changes every 30 seconds and can be verified by anyone using the verification page.
                            </small>
                        </div>
                        
                        <% if (qrCode) { %>
                        <div class="mt-4">
                            <details>
                                <summary class="btn btn-outline-info">
                                    <i class="fas fa-qrcode"></i> Show QR Code for Authenticator Apps
                                </summary>
                                <div class="mt-3">
                                    <img src="<%= qrCode %>" alt="QR Code" class="img-fluid" style="max-width: 200px;">
                                    <p class="small text-muted mt-2">
                                        Scan this QR code with Google Authenticator or similar apps to generate tokens on your device.
                                    </p>
                                </div>
                            </details>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    let intervalId;

    function copyToken() {
        const tokenText = document.getElementById('tokenDisplay').textContent.replace(/[0-9]+s/, '').trim();
        navigator.clipboard.writeText(tokenText).then(() => {
            showToast('Token copied to clipboard!', 'success');
        }).catch(() => {
            showToast('Failed to copy token', 'error');
        });
    }

    function showToast(message, type) {
        const bgClass = type === 'success' ? 'success' : 'danger';
        const toastHtml = '<div class="toast align-items-center text-white bg-' + bgClass + ' border-0" role="alert">' +
            '<div class="d-flex">' +
            '<div class="toast-body">' + message + '</div>' +
            '<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>' +
            '</div></div>';
        
        let toastContainer = document.getElementById('toastContainer');
        if (!toastContainer) {
            toastContainer = document.createElement('div');
            toastContainer.id = 'toastContainer';
            toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
            document.body.appendChild(toastContainer);
        }
        
        toastContainer.insertAdjacentHTML('beforeend', toastHtml);
        const toastElement = toastContainer.lastElementChild;
        const toast = new bootstrap.Toast(toastElement);
        toast.show();
        
        toastElement.addEventListener('hidden.bs.toast', () => {
            toastElement.remove();
        });
    }

    function refreshToken() {
        fetch('/api/current-token')
            .then(response => response.json())
            .then(data => {
                document.getElementById('tokenDisplay').innerHTML = 
                    '<div class="timer" id="timer">' + data.timeRemaining + 's</div>' + data.token;
                showToast('Token refreshed!', 'success');
            })
            .catch(error => {
                showToast('Failed to refresh token', 'error');
            });
    }

    function updateTimer() {
        fetch('/api/current-token')
            .then(response => response.json())
            .then(data => {
                document.getElementById('tokenDisplay').innerHTML = 
                    '<div class="timer" id="timer">' + data.timeRemaining + 's</div>' + data.token;
            })
            .catch(error => {
                console.error('Failed to update token:', error);
            });
    }

    // Auto-refresh token every second
    intervalId = setInterval(updateTimer, 1000);

    // Clean up interval when page is unloaded
    window.addEventListener('beforeunload', () => {
        if (intervalId) {
            clearInterval(intervalId);
        }
    });
    </script>
</body>
</html> 